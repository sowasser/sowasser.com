# CircleCI 2.0 configuration file, https://circleci.com/docs/2.0/
version: 2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6

    steps:
      - checkout

      - run:
          name: Install awscli, doesn't come by default with the ruby image
          # Python 2.7 comes by default with the Ubuntu container CircleCI uses.
          # However it doesn't comes with python-dev which is required for installing pip. If not
          # installed there will be an error when installing some package called "wheel". The
          # next two commands fetches the pip install script and installs pip. After installing
          # pip we add pip to the path (so we can subsequently use the command "pip"). This is
          # required because awscli has other dependencies which requires the existence of pip on
          # the path. Finally we install awscli.
          #
          # It should be noted this is a pretty ugly hack to get awscli in a Node container. In
          # CircleCI v1 the images came by default with awscli, so this mess wasn't required.
          command: |
              sudo apt-get install python-dev
              curl -O https://bootstrap.pypa.io/2.7/get-pip.py --output get-pip.py
              python get-pip.py --user
              export PATH=~/.local/bin:$PATH
              pip install awscli --upgrade --user

      - run:
          name: Install dependencies with the Ruby package manager Bundler
          command: bundle install

      - run:
          name: Build Jekyll site, i.e. generate the _site/ folder
          command: bundle exec jekyll build

      - deploy:
          name: Deploy site to AWS S3
          # When there is a new commit on the master branch we push the contents of the _site/
          # folder to the sowasser.com AWS S3 bucket. The --delete flag means we delete files in 
          # the S3 buckets if they don't exist in the public/ folder.
          #
          # Apparently each CircleCI step is run in a separate terminal session. That means that
          # the command aws that we put on the path in the awscli installation step is not on the
          # path. As a workaround I just call it directly from its full location: ~/.local/bin/aws
          #
          # After each S3 bucket has been updated with the new content we invalidate the CloudFront
          # distributions (the thing that caches the static assets all over the world).
          # $CLOUDFRONTDISTID is an environment variables defined at circleci.com.
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                ~/.local/bin/aws s3 sync _site/ s3://sowasser.com/ --delete
                ~/.local/bin/aws cloudfront create-invalidation --distribution-id $CLOUDFRONTDISTID --paths '/*'
            else
                echo "Not on master branch so not deploying"
            fi